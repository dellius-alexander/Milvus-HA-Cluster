global
    log stdout format raw local0 info
    maxconn 4096
    pidfile /var/run/haproxy.pid
    user haproxy
    group haproxy
    daemon
    stats socket /var/run/haproxy.sock user haproxy group haproxy mode 660 level admin
    stats timeout 2m

defaults
    log global
    mode tcp
    option tcplog
    option dontlognull
    timeout connect 5000ms
    timeout client 30000ms
    timeout server 30000ms
    maxconn 2000
    retries 3
    option redispatch

# Stats frontend for accessing all HAProxy stats
frontend stats_frontend
    # Operates in HTTP mode for the stats page
    mode http
    # Binds to port 8404
    bind *:8404
    # Enables the statistics page
    stats enable
    # URI for accessing stats
    stats uri /stats
    # Refresh stats every 5 seconds
    stats refresh 30s
    # Enable detailed HTTP logging
    option httplog
    stats show-node
    stats show-legends
    stats show-desc "Top-Level HAProxy Stats"
    acl is_etcd_stats path_beg /etcd-stats
    acl is_minio_stats path_beg /minio-stats
    acl is_pulsar_stats path_beg /pulsar-stats
    acl is_milvus_stats path_beg /milvus-stats
#    acl is_postgres_stats path_beg /postgres-stats
    use_backend etcd_stats if is_etcd_stats
    use_backend minio_stats if is_minio_stats
    use_backend pulsar_stats if is_pulsar_stats
    use_backend milvus_stats if is_milvus_stats
#    use_backend postgres_stats if is_postgres_stats
    # Secures the stats page with basic authentication
    stats auth admin:admin123

# Stats backends for lower-level HAProxy services
backend etcd_stats
    mode http
    server etcd-proxy etcd-proxy:8404 check

backend minio_stats
    mode http
    server minio-proxy minio-proxy:8404 check

backend pulsar_stats
    mode http
    server pulsar-proxy pulsar-proxy:8404 check

backend milvus_stats
    mode http
    server milvus-entrypoint milvus-entrypoint:8404 check

#backend postgres_stats
#    mode http
#    server postgres-proxy postgres-proxy:8080 check

# etcd frontend and backend
frontend etcd_frontend
    bind *:2379
    mode tcp
    option tcplog
    use_backend etcd_backend

backend etcd_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server etcd-proxy etcd-proxy:2379 check

# MinIO frontend and backends
frontend minio_frontend_api
    bind *:9000
    mode tcp
    option tcplog
    use_backend minio_backend_api

frontend minio_frontend_console
    bind *:9001
    mode tcp
    option tcplog
    use_backend minio_backend_console

backend minio_backend_api
    mode tcp
    balance roundrobin
    option tcp-check
    server minio-proxy minio-proxy:9000 check

backend minio_backend_console
    mode tcp
    balance roundrobin
    option tcp-check
    server minio-proxy minio-proxy:9001 check

# Pulsar frontend and backends
frontend pulsar_frontend_binary
    bind *:6650
    mode tcp
    option tcplog
    use_backend pulsar_backend_binary

frontend pulsar_frontend_http
    bind *:8080
    mode tcp
    option tcplog
    use_backend pulsar_backend_http

backend pulsar_backend_binary
    mode tcp
    balance roundrobin
    option tcp-check
    server pulsar-proxy pulsar-proxy:6650 check

backend pulsar_backend_http
    mode tcp
    balance roundrobin
    option tcp-check
    server pulsar-proxy pulsar-proxy:8080 check

# Milvus frontend and backends
frontend milvus_frontend_grpc
    bind *:19530
    mode tcp
    option tcplog
    use_backend milvus_backend_grpc

frontend milvus_frontend_rest
    bind *:9091
    mode tcp
    option tcplog
    use_backend milvus_backend_rest

backend milvus_backend_grpc
    mode tcp
    balance roundrobin
    option tcp-check
    server milvus-entrypoint milvus-entrypoint:19530 check

backend milvus_backend_rest
    mode tcp
    balance roundrobin
    option tcp-check
    server milvus-entrypoint milvus-entrypoint:9091 check

# Prometheus frontend and backend
frontend prometheus_frontend
    bind *:9090
    mode tcp
    option tcplog
    use_backend prometheus_backend

backend prometheus_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server prometheus prometheus:9090 check

# Grafana frontend and backend
frontend grafana_frontend
    bind *:3000
    mode tcp
    option tcplog
    use_backend grafana_backend

backend grafana_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server grafana grafana:3000 check

# Milvus GUI frontend and backend
frontend milvus_gui_frontend
    bind *:3300
    mode tcp
    option tcplog
    use_backend milvus_gui_backend

backend milvus_gui_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server milvus-gui milvus-gui:3000 check

# Node Exporter frontend and backend
frontend node_exporter_frontend
    bind *:9100
    mode tcp
    option tcplog
    use_backend node_exporter_backend

backend node_exporter_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server node_exporter node_exporter:9100 check

